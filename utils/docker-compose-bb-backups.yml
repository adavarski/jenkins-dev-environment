version: '2.4'
services:

  jenkins:
    build: .
    image: davarski/jenkins-dev
    container_name: jenkins-dev
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - SONARQUBE_URL=http://sonarqube:9000
      - SLACK_WORKSPACE=devops-dev
      - SLACK_TOKEN=ExiUpOiyEZnngKc45fEZOc8B
    ports:
      - 8080:8080
      - 8081:8081
    depends_on:
      - sonarqube

  sonarqube:
    image: sonarqube:7.8-community
    container_name: sonarqube
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    environment:
      - sonar.jdbc.url=jdbc:postgresql://postgres/sonar
    ports:
      - 9000:9000
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:11-alpine
    container_name: postgres
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar"]
      interval: 10s
      timeout: 5s
      retries: 5

  bitbucket:
    image: atlassian/bitbucket-server:7.1-jdk11
    container_name: bitbucket
    ports:
      - 7990:7990
      - 7999:7999
    links:
      - atl_database
    volumes:
      - bitbucket-data:/var/atlassian/application-data/bitbucket

  atl_database:
    image: postgres:12.2
    container_name: atl_database
    ports:
      - 5431:5432
    volumes:
      - atl_database-data:/var/lib/postgresql/data      
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
    environment:    
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

volumes:
  jenkins_data:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  postgresql:
  postgresql_data:
  bitbucket-data:
  atl_database-data:


backups:
    # Image tag (replace with yours)
    image: postgres:12.2
    # Database backups prune interval (replace with yours). Default is 7 days.
    # find /srv/bitbucket-postgres/backups -type f -mtime +7 | xargs rm -f

    # Application data backups prune interval (replace with yours). Default is 7 days.
    # find /srv/bitbucket-application-data/backups -type f -mtime +7 | xargs rm -f

    # Bitbucket backups interval (replace with yours). Default is 1 day.
    # sleep 24h

    # Run bitbucket-restore-application-data.sh to restore application data if needed.
    # Run bitbucket-restore-database.sh to restore database if needed.
    command: sh -c 'sleep 30m
             && while true; do
             PGPASSWORD="$$(echo $$POSTGRES_PASSWORD)"
             pg_dump
             -h atl_database
             -p 5432
             -d bitbucketdb
             -U bitbucketdbuser | gzip > /srv/bitbucket-postgres/backups/bitbucket-postgres-backup-$$(date "+%Y-%m-%d_%H-%M").gz
             && tar -zcpf /srv/bitbucket-application-data/backups/bitbucket-application-data-backup-$$(date "+%Y-%m-%d_%H-%M").tar.gz /var/atlassian/application-data/bitbucket
             && find /srv/bitbucket-postgres/backups -type f -mtime +7 | xargs rm -f
             && find /srv/bitbucket-application-data/backups -type f -mtime +7 | xargs rm -f;
             sleep 24h; done'
    volumes:
      - bitbucket-data:/var/atlassian/application-data/bitbucket
      # Application data backups location
      - bitbucket-data-backups:/srv/bitbucket-application-data/backups
      # Database backups location
      - bitbucket-postgres-backups:/srv/bitbucket-postgres/backups
    environment:
      # Database password (replace with yours)
      POSTGRES_PASSWORD: bitbucket-pw
    restart: unless-stopped
    depends_on:
      - atl_database
      - bitbucket
